AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Sample SAM Template for sam-test-app'

#############################GLOBALS###################################
# Sometimes resources that you declare in an AWS SAM template 
# have common configurations.  For example, you might have an 
# application with multiple AWS::Serverless::Function resources 
# that have identical Runtime, Memory, VPCConfig, Environment, and Cors 
# configurations. Instead of duplicating this information 
# in every resource, you can declare them once in the Globals 
# section and let your resources inherit them.
Globals:
  Function:
    Handler: lambda_function.lambda_handler
    Runtime: python3.8
    MemorySize: 128
    Timeout: 30
    Layers:
      - !Ref LambdaLayer

#############################RESOURCES###################################
Resources:
#############################LAMBDA-IAM-ROLES###################################
# In this section we create the roles for our various lambdas. The Basic role
# only attaches the lambda basic execution role which gives our lambdas
# access to cloudformation
  BasicLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "basic-lambda-role-${AWS::Region}"
      Description: Provides lambdas with permissions
      #Provide Codebuild permission to assume this role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Path: "/service-role/"
  
#############################LAMBDA-LAYER###################################
  LambdaLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: lambda-layer
      Description: Dependencies for lambdas
      ContentUri: layers
      LicenseInfo: 'MIT'
      RetentionPolicy: Delete
      CompatibleRuntimes:
        - python3.8
    Metadata:
      BuildMethod: python3.8

#############################LAMBDAS###################################
# In the following section we create our lambdas and specify where to find
# the code for the lambda using the CodeUri property

  GetUserDetailsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: scripts/get_user_details/
      FunctionName: get_user_details
      Role: !GetAtt BasicLambdaRole.Arn